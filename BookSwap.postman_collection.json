{
	"info": {
		"_postman_id": "10c44d11-801b-4712-8921-e707ec697f9f",
		"name": "BookSwap",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34544916"
	},
	"item": [
		{
			"name": "http://localhost:5000/books",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Go Programming\",\r\n  \"author\": \"John Doe\",\r\n  \"category\": \"Programming\",\r\n  \"image_url\": \"http://example.com/go.jpg\",\r\n  \"is_private\": false\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/books",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/books",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/books",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/book",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/books/1",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/books/update",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Updated Go Programming\",\r\n  \"author\": \"John Doe\",\r\n  \"category\": \"Programming\",\r\n  \"image_url\": \"http://example.com/updated_go.jpg\",\r\n  \"is_private\": false\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/books/1",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/books/delete",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/books/1",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/auth/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();\r",
							"console.log(\"Ответ от сервера:\", responseJson);\r",
							"\r",
							"if (responseJson.token) {\r",
							"    pm.environment.set('bearer_token', responseJson.token);\r",
							"    console.log(\"✅ Токен сохранён: \" + responseJson.token);\r",
							"} else {\r",
							"    console.log(\"❌ Токен не найден\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"islambek17@example.com\",\r\n  \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/auth/login",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/auth/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();\r",
							"console.log(\"Ответ от сервера:\", responseJson);\r",
							"\r",
							"if (responseJson.token) {\r",
							"    pm.environment.set('bearer_token', responseJson.token);\r",
							"    console.log(\"✅ Токен сохранён: \" + responseJson.token);\r",
							"} else {\r",
							"    console.log(\"❌ Токен не найден\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"name\" : \"Isco\",\r\n  \"email\": \"islambek17@example.com\",\r\n  \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/auth/register",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/profile",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Получаем токен из переменной окружения\r",
							"let token = pm.environment.get('bearer_token');\r",
							"\r",
							"// Если токен существует, добавляем его в заголовок\r",
							"if (token) {\r",
							"    pm.request.headers.upsert({\r",
							"        key: 'Authorization',\r",
							"        value: 'Bearer ' + token\r",
							"    });\r",
							"} else {\r",
							"    console.log(\"Токен не найден. Пожалуйста, авторизуйтесь сначала.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/profile",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/profile/update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Исламбек1\",\r\n  \"email\": \"islambek1@example.com\",\r\n  \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/profile/update",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"profile",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "profile/delete",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{localhost}}/profile/delete",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"profile",
						"delete"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "localhost",
			"value": "http://localhost:8080",
			"type": "default"
		},
		{
			"key": "docker",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}